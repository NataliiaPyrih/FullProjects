@model IEnumerable<StudentJournal.Models.Student>
@if (Model == null || !Model.Any())
{
    <p>There is no data to display</p>
}
else
{

    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Hours Studied</th>
                <th>Attendance (%)</th>
                <th>Extra Activities</th>
                <th>Sleep Hours</th>
                <th>Previous Scores</th>
                <th>Internet Access</th>
                <th>Tutoring Sessions</th>
                <th>School Type</th>
                <th>Physical Activity</th>
                <th>Gender</th>
                <th>
                    Exam Score <button class="btn btn-link sort-button" data-field="ExamScore" data-order="asc">▲</button>
                    <button class="btn btn-link sort-button" data-field="ExamScore" data-order="desc">▼</button>
                </th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in Model)
            {
                <tr>
                    <td>@student.FirstName</td>
                    <td>@student.LastName</td>
                    <td>@student.Hours_Studied</td>
                    <td>@student.Attendance</td>
                    <td>@student.Extracurricular_Activities</td>
                    <td>@student.Sleep_Hours</td>
                    <td>@student.Previous_Scores</td>
                    <td>@student.Internet_Access</td>
                    <td>@student.Tutoring_Sessions</td>
                    <td>@student.School_Type</td>
                    <td>@student.Physical_Activity</td>
                    <td>@student.Gender</td>
                    <td>@student.Exam_Score</td>
                    <td>
                        <a asp-controller="Student" asp-action="Details" asp-route-id="@student.Id" class="btn btn-sm btn-info">Info</a>
                        <button class="btn btn-sm btn-danger delete-button"
                                data-id="@student.Id"
                                data-name="@student.FirstName @student.LastName"
                                data-toggle="modal"
                                data-target="#deleteModal">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Removing a student</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Do you really want to delete the student: <strong id="studentName"></strong>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
        $(document).ready(function () {
        $(".sort-button").on("click", function () {
            const sortField = $(this).data("field");
            const sortOrder = $(this).data("order");
            const isDebtor = window.location.pathname.includes("Debtors");

            $.ajax({
                url: "/Student/GetSortedStudents",
                type: "GET",
                data: { sortField: sortField, sortOrder: sortOrder, isDebtor: isDebtor },
                success: function (data) {
                    updateTable(data);
                },
                error: function () {
                    alert("Error while sorting students.");
                }
            });
        });

        function updateTable(students) {
            const tbody = $("table tbody");
            tbody.empty();

            $.each(students, function (index, student) {
                tbody.append(`
                    <tr>
                        <td>${student.firstName}</td>
                        <td>${student.lastName}</td>
                        <td>${student.hours_Studied}</td>
                        <td>${student.attendance}</td>
                        <td>${student.extracurricular_Activities}</td>
                        <td>${student.sleep_Hours}</td>
                        <td>${student.previous_Scores}</td>
                        <td>${student.internet_Access}</td>
                        <td>${student.tutoring_Sessions}</td>
                        <td>${student.school_Type}</td>
                        <td>${student.physical_Activity}</td>
                        <td>${student.gender}</td>
                        <td>${student.exam_Score}</td>
                        <td>
                            <a href="/Student/Details/${student.id}" class="btn btn-sm btn-info">Info</a>
                            <button class="btn btn-sm btn-danger delete-button"
                                    data-id="${student.id}"
                                    data-name="${student.firstName} ${student.lastName}"
                                    data-toggle="modal"
                                    data-target="#deleteModal">
                                Delete
                            </button>
                        </td>
                    </tr>
                `);
            });
        }
    });
</script>